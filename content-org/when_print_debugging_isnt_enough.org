#+HUGO_BASE_DIR: ~/Coding/test_site/
#+HUGO_SECTION: posts/

* TODO gdb is ok                                     :rust:tantivy:debugging:
  :PROPERTIES: 
  :EXPORT_FILE_NAME: gdb_is_ok 
  :EXPORT_DATE: 2019-05-11
  :EXPORT_HUGO_CUSTOM_FRONT_MATTER: :description "Why gdb is still useful"
  :END:
  Imagine: you are working on a library with many dependencies and internal
  components. You need to add functionality that touches some internals, but is
  relatively well-isolated. You have worked on this codebase before, so you
  recognise its code style and naming. Whenever you open a new file with structs
  and interfaces, you can find a test case to read through its use.

  It's great, what could possibly go wrong?

** Why not use dbg! and printing? 




